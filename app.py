import streamlit as st
import pandas as pd
import plotly.express as px
import sqlite3
from datetime import datetime

# -----------------------------
# CONFIGURA√á√ÉO INICIAL
# -----------------------------
st.set_page_config(page_title="IA Assistente de Compliance", layout="wide")
st.title("üîí IA Assistente de Compliance")

# -----------------------------
# LOGIN SIMPLES
# -----------------------------
usuario = st.text_input("Usu√°rio:")
senha = st.text_input("Senha:", type="password")

if 'autenticado' not in st.session_state:
    st.session_state['autenticado'] = False

if st.button("Entrar"):
    if usuario == "admin" and senha == "1234":
        st.session_state['autenticado'] = True
        st.success("Login realizado com sucesso!")
    else:
        st.error("Usu√°rio ou senha incorretos.")

# -----------------------------
# CONEX√ÉO COM BANCO DE DADOS
# -----------------------------
conn = sqlite3.connect("denuncias.db")
c = conn.cursor()
c.execute('''
    CREATE TABLE IF NOT EXISTS denuncias (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        setor TEXT,
        tipo_ocorrencia TEXT,
        descricao TEXT,
        data_envio TIMESTAMP
    )
''')
conn.commit()

# -----------------------------
# FORMUL√ÅRIO DE DEN√öNCIA (SEM LOGIN)
# -----------------------------
st.header("üì¢ Registrar Den√∫ncia An√¥nima")

setor = st.selectbox("Selecione o setor relacionado ao fato:",
                     ("Engenharia", "Produ√ß√£o", "Marketing", "Recursos Humanos", "Financeiro", "Outros"))

tipo_assedio = st.selectbox("Tipo de ocorr√™ncia:",
                            ("Ass√©dio Moral", "Ass√©dio Sexual", "Racismo", "Homofobia", "Discrimina√ß√£o", "Outros"))

descricao = st.text_area("Descreva o ocorrido:")

if st.button("Enviar Den√∫ncia"):
    if descricao.strip() == "":
        st.warning("Por favor, descreva o ocorrido.")
    else:
        c.execute("INSERT INTO denuncias (setor, tipo_ocorrencia, descricao, data_envio) VALUES (?, ?, ?, ?)",
                  (setor, tipo_assedio, descricao, datetime.now()))
        conn.commit()
        st.success("‚úÖ Den√∫ncia enviada com sucesso! Sua identidade ser√° preservada.")

# -----------------------------
# PAINEL RH/COMPLIANCE
# -----------------------------
if st.session_state['autenticado']:
    st.markdown("---")
    st.header("üìä Painel de An√°lise de Den√∫ncias")

    df = pd.read_sql_query("SELECT * FROM denuncias", conn)

    if not df.empty:
        # Gr√°fico por tipo
        contagem_tipo = df['tipo_ocorrencia'].value_counts().reset_index()
        contagem_tipo.columns = ['Tipo de Ocorr√™ncia', 'N√∫mero de Casos']

        # Gr√°fico por setor
        contagem_setor = df['setor'].value_counts().reset_index()
        contagem_setor.columns = ['Setor', 'N√∫mero de Casos']

        # Gr√°fico temporal
        df['M√™s'] = pd.to_datetime(df['data_envio']).dt.to_period('M').astype(str)
        contagem_temporal = df['M√™s'].value_counts().sort_index().reset_index()
        contagem_temporal.columns = ['M√™s', 'N√∫mero de Casos']

        col1, col2 = st.columns(2)

        with col1:
            st.subheader("üìä Casos por Tipo de Ocorr√™ncia")
            fig_bar = px.bar(contagem_tipo, x='Tipo de Ocorr√™ncia', y='N√∫mero de Casos',
                             color='Tipo de Ocorr√™ncia', title="Distribui√ß√£o de Casos por Tipo")
            st.plotly_chart(fig_bar
