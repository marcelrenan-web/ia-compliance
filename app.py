import streamlit as st
import pandas as pd
import plotly.express as px

# --- Configura√ß√µes da P√°gina ---
st.set_page_config(
    page_title="IA de Compliance",
    page_icon="üõ°Ô∏è",
    layout="wide"
)

# --- Estrutura de Se√ß√µes da P√°gina ---
st.title("üõ°Ô∏è IA Assistente de Compliance")
st.markdown("""
Sua voz √© essencial para construirmos um ambiente de trabalho mais √©tico e seguro.
**Todas as den√∫ncias s√£o an√¥nimas.** Sua identidade ser√° totalmente protegida para que voc√™ possa relatar incidentes com seguran√ßa.
""")

st.markdown("---")

# --- Formul√°rio de Den√∫ncia ---
st.header("Formul√°rio de Den√∫ncia An√¥nima")

denuncia_texto = st.text_area("Descreva o ocorrido:", height=200)

setor_escolhido = st.selectbox(
    "Selecione o setor onde ocorreu:",
    ("", "Engenharia", "Produ√ß√£o", "Marketing", "Recursos Humanos", "Financeiro", "Outro")
)

botao_enviar = st.button("Enviar Den√∫ncia")

# L√≥gica de processamento
if botao_enviar:
    if denuncia_texto and setor_escolhido:
        # Ponto 1: Integrar o Modelo de NLP
        #
        # O modelo de NLP deve ser carregado e usado aqui.
        # Por exemplo, com scikit-learn:
        # modelo_nlp = joblib.load('modelo_treinado.pkl')
        # tipo_denuncia = modelo_nlp.predict([denuncia_texto])[0]
        #
        # Por enquanto, usamos um valor padr√£o para simula√ß√£o:
        tipo_denuncia = "Ass√©dio Moral"  # Mude isso para a sa√≠da do seu modelo
        
        # Ponto 2: Conectar e Salvar no Banco de Dados
        #
        # Voc√™ deve ter uma fun√ß√£o que se conecta ao banco de dados e salva a nova den√∫ncia.
        # Exemplo:
        # salvar_denuncia(denuncia_texto, setor_escolhido, tipo_denuncia)
        
        st.success("‚úÖ Sua den√∫ncia foi enviada com sucesso! Agradecemos sua colabora√ß√£o.")
    else:
        st.warning("‚ö†Ô∏è Por favor, preencha todos os campos obrigat√≥rios.")

st.markdown("---")

# --- Painel de Visualiza√ß√£o de Dados (Dashboard) ---
st.header("An√°lise de Den√∫ncias (Acesso Restrito)")
st.markdown("""
Este painel fornece uma vis√£o geral das den√∫ncias registradas, permitindo que o RH e a √°rea de Compliance identifiquem tend√™ncias e problemas em tempo real.
""")

# Ponto 3: Carregar Dados do Banco de Dados
#
# Crie uma fun√ß√£o para ler os dados das den√∫ncias do seu banco de dados
# e carregar em um DataFrame do Pandas para os gr√°ficos.
#
# Exemplo (usando dados de simula√ß√£o para o exemplo):
dados_denuncias = {
    'tipo_denuncia': ['Ass√©dio Moral', 'Ass√©dio Sexual', 'Racismo', 'Ass√©dio Moral', 'Ass√©dio Sexual', 'Homofobia', 'Ass√©dio Moral'],
    'setor': ['Engenharia', 'Produ√ß√£o', 'Marketing', 'Engenharia', 'Recursos Humanos', 'Engenharia', 'Financeiro'],
    'data': pd.to_datetime(['2025-01-01', '2025-02-15', '2025-03-20', '2025-04-10', '2025-05-05', '2025-06-12', '2025-06-25'])
}
df_denuncias = pd.DataFrame(dados_denuncias)

# --- Gr√°ficos ---

col1, col2, col3 = st.columns(3)

# Gr√°fico de Barras: Den√∫ncias por Tipo de Ass√©dio
with col1:
    st.subheader("Den√∫ncias por Tipo de Ass√©dio")
    contagem_tipo = df_denuncias['tipo_denuncia'].value_counts().reset_index()
    contagem_tipo.columns = ['Tipo de Ass√©dio', 'N√∫mero de Casos']
    fig_barras = px.bar(contagem_tipo, x='Tipo de Ass√©dio', y='N√∫mero de Casos', color='Tipo de Ass√©dio',
                        title='Total de Casos por Tipo')
    st.plotly_chart(fig_barras, use_container_width=True)

# Gr√°fico de Pizza: Den√∫ncias por Setor
with col2:
    st.subheader("Den√∫ncias por Setor")
    contagem_setor = df_denuncias['setor'].value_counts().reset_index()
    contagem_setor.columns = ['Setor', 'N√∫mero de Casos']
    fig_pizza = px.pie(contagem_setor, values='N√∫mero de Casos', names='Setor', title='Distribui√ß√£o por Setor')
    st.plotly_chart(fig_pizza, use_container_width=True)
    
# Gr√°fico de Linha do Tempo: Evolu√ß√£o das Den√∫ncias
with col3:
    st.subheader("Evolu√ß√£o das Den√∫ncias")
    df_denuncias['data_mes'] = df_denuncias['data'].dt.to_period('M')
    contagem_temporal = df_denuncias['data_mes'].value_counts().sort_index().reset_index()
    contagem_temporal.columns = ['M√™s', 'N√∫mero de Casos']
    fig_linha = px.line(contagem_temporal, x='M√™s', y='N√∫mero de Casos', title='N√∫mero de Casos ao Longo do Tempo')
    st.plotly_chart(fig_linha, use_container_width=True)
